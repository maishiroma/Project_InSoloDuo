<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sitFlamethrower</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>SuperClass_FloorWall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables. Can be turned on or off, how far the flame wall is, and can it move horizontally
image_speed = 0;

//default values. Change this in creation code!
switchActive = true; //Default. Change this to make it go off in spurts
flameLength = 7;   //speed of fire
activeFiringTimer = 120; //default time in how long it can fire
flameDelay = 120;    //resting period length
ticker = activeFiringTimer; 
canMoveH = false; 
ignoreGravity = true;
upsideDown = false; //change this to true if placing on ceiling
activeAlarm = false; 

//set values
grav = 0.2;
vsp = 0;
hsp = 0;
moveSpeed = 1.5;
dir = 1;
resting = false;
countDown = flameDelay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reactivates the trap
ticker = activeFiringTimer;
activeAlarm = false;
countDown = flameDelay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic behavior of this
if(canMoveH == true){
 if(ignoreGravity == true){
        grav = 0;
    }
    vsp += grav;
    hsp = dir * moveSpeed;
    
    if(place_meeting(x+hsp,y,SuperClass_FloorWall)){
        while(!place_meeting(x+sign(hsp),y,SuperClass_FloorWall)){
            x += sign(hsp);
        }
        hsp = 0;
        dir *= -1;
    }
    else if(place_meeting(x+hsp,y,obj_invisibleGimmickWall)){
        while(!place_meeting(x+sign(hsp),y,obj_invisibleGimmickWall)){
            x += sign(hsp);
        }    
        hsp = 0;
        dir *= -1;
    }
    x += hsp;
    
    if(place_meeting(x,y+vsp,SuperClass_FloorWall)){
        while(!place_meeting(x,y+sign(vsp),SuperClass_FloorWall)){
            y += sign(vsp);
        }
        vsp = 0;
    }
    y += vsp;
    
    if(instance_exists(SuperClass_Player)){
        if(place_meeting(x,y-1,SuperClass_Player)){
            SuperClass_Player.hsp_carry = hsp;
        }
    }
}

if(switchActive == true){
    if(global.active == false){
        image_index = 0;
        if(upsideDown == false){
            with instance_create(x,y-25,obj_fire){
                speed = obj_sitFlamethrower.flameLength;
                direction = 90;
            }
        }
        else{
            with instance_create(x,y+27,obj_fire){
                speed = obj_sitFlamethrower.flameLength;
                direction = 270;
            }
        }
    }
    else{
        image_index = 1;
    }
}
else{
    if(ticker &gt; 0){
        image_index = 0;
        if(upsideDown == false){
            with instance_create(x,y-25,obj_fire){
                speed = obj_sitFlamethrower.flameLength;
                direction = 90;
            }
            ticker -=1;
        }
        else{
             with instance_create(x,y+27,obj_fire){
                speed = obj_sitFlamethrower.flameLength;
                direction = 270;
            }
            ticker -=1;
        }
    }
    else{
        if(activeAlarm == false){
            image_index = 1;
            activeAlarm = true;
            alarm[0] = flameDelay;
        }
    
        countDown--;
        if(countDown &lt; 35){
            image_index = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
